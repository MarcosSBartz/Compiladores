PARSER_BEGIN(Lugosi)
import java.io.*;
public class Lugosi {

  public static void main(String args[]) throws ParseException,IOException {
    
    Lugosi parser = new Lugosi(new FileInputStream(args[0]));
    parser.Lugosi();
  }

}

PARSER_END(Lugosi)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <APARENT: "(">
| <FPARENT: ")">
| <INT: "int">
| <BOOL: "bool">
| <VAR: "var">
| <END: ";">
| <ATRIB: ":=">
| <OP: ("+" | "-" | "*" | "/" | "&&" | "||" | "<" | ">" | "==")>
| <ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])*>
| <EXP: <APARENT> <EXP> <OP> <EXP> <FPARENT>>
| <TOKEN_ID: ["a"-"z","A"-"Z"](["a"-"z","A"-"Z","0"-"9"])*("_")*>
| <TOKEN_NUMLITERAL: (["0"-"9"])+ ("."(["0"-"9"])?) ("E" ("+" | "-")? (["0"-"9"])*)?>
| <FALSE: "false">
| <IF: "if">
| <DO: "do">
| <TRUE: "true">
| <PRINT: "print">

}


void Lugosi () :
{}
{ 

  Main() 
//Func()?
  <EOF> 
}
	

void Main ():
{}
{
 <MAIN> <ACHAVES> 
 
 VarDecl()
 // SeqComandos()

 <FCHAVES>

}

void VarDecl() :
{}
{
	(<VAR> Tipo() <TOKEN_ID> <END>)?
}

void Tipo() :
{}
{
	<BOOL> | <INT>
}

void Comandos() :
{}
{
	<ID> <ATRIB> <EXP> <END>
}

void Exp():
{}
{
	<APARENT> <ID> <OP> <ID> <FPARENT> | Fator()

}

void Fator():
{}
{
	<ID>
}
